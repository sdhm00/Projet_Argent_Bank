swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
  - https
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
       # - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved Successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/accounts/{account_Id}/transactions:
    get:
      security: 
        - Bearer: [] 
      tags:
        - Partie 2 - Complémentaire
      summary: Transaction API
      description: API to get all transactions for a user
      parameters:
        - in: header
          name: Authorization
          type: string
          description: Attach Bearer JWT token
          required: true
        - in: path
          name: account_Id
          description: account ID
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved Successully
          schema:
            $ref: '#/definitions/AccountID'
        '400':
          description: Invalid Fields
        '401':
          description : Unauthorized
        '404':
            description: Not Found.
        '500':
          description: Internal Server Error
  /user/account/{account_id}/transaction/{transaction_id}:
    get:
      security: 
        - Bearer: [] 
      tags:
        - Partie 2 - Complémentaire
      summary: Transactions API
      description: API to get a detail of a single transaction
      parameters:
        - in: header
          name: Authorization
          type: string
          description: Attach Bearer JWT token
          required: true
        - in: path
          name: transaction_id
          type: integer
          description: Transaction ID
          required: true
        - in: path
          name: account_id
          type: integer
          description: Account ID
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: A single transaction retrieved successfully
          schema:
            $ref: '#/definitions/AccountResponse'
        '401':
          description : Unauthorized
        '400': 
          description: Invalid Fields
        '404':
            description: Not Found.
        '500':
          description: Internal Server Error
  /user/accounts/{account_id}/transactions/{transaction_id}/category: 
     put:
       security: 
         - Bearer: [] 
       tags:
         - Partie 2 - Complémentaire
       summary: Transactions API
       description: API for updating a category of transaction
       parameters:
         - in: header
           name: Authorization
           type: string
           description: Attach Bearer JWT token
           required: true
         - in: path
           name: transaction_id
           type: integer
           description: Transaction ID
           required: true
         - in: path
           name: account_id
           type: integer
           description: Account ID
           required: true
         - in: body
           name: body
           description: Update account transaction attributes
           required: true
           schema:
             $ref: '#/definitions/UserTransaction'
       produces:
         - application/json
       responses:
          '200':
           description: updated transaction successfully
           schema:
             $ref: '#/definitions/CategoryResponse'
          '401':
            description : Unauthorized
          '400': 
           description: Invalid Fields
          '404':
            description: Not Found.
          '500':
           description: Internal Server Error
  /user/accounts/{account_id}/transactions/{transaction_id}/note:
    post :
      security :
        - Bearer: []
      tags:
        - Partie 2 - Complémentaire
      summary: Add a note to a transaction
      description: Add a note to a specific transaction in my API.
      parameters :
        - in: path 
          name: accountID
          description: ID of the user's bank account
          required: true
          type : integer
        - in: path 
          name: transactionID
          description: ID of the user's bank account transaction
          required: true
          type : integer
        - in: body
          name: body
          description: The note to add transaction.
          required: true
          schema:
            $ref: '#/definitions/Note'
      responses:
        '200':
          description: OK - Successfully
        '400':
          description: Bad Request.   
        '401':
          description: Unauthorized
        '404':
          description: Not Found.
        '500':
          description: Internal Server Error.
  /user/accounts/{account_id}/transactions/{transaction_id}/{note_id}:
    delete :
      security :
        - Bearer: []
      tags:
        - Partie 2 - Complémentaire
      summary: Delete a note of a transaction
      description: Delete a note to a specific transaction in my API.
      parameters :
        - in: path 
          name: accountID
          description: ID of the user's bank account
          required: true
          type : integer
        - in: path 
          name: transactionID
          description: ID of the user's bank account transaction
          required: true
          type : integer
        - in: path
          name: noteID
          description: The note to add transaction.
          required: true
          type: integer
      responses:
        '200':
          description: OK - Successfully
        '400':
          description: Bad Request.   
        '401':
          description: Unauthorized
        '404':
          description: Not Found.
        '500':
          description: Internal Server Error.
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      id:
        type: integer
      date:
        type: string
      description:
        type: string
      amount:
        type: number
      balance:
        type: number
  LoginResponse:
    type: object
    properties:
      id:
        type: integer
      date:
        type: string
      description: 
        type: string   
  UserProfile:
    type: object
    properties:
      category:
        type: string
      note:
        type: string
  UserTransaction:
    type: object
    properties:
      category:
        type: string
      note:
        type: string
  CategoryResponse:
    type: object
    properties:
      id:
        type: integer
      date:
        type: string
        format: date-time
      description: 
        type: string
        example: "Payment at starbucks"
      amount:
        type: number
        format: int32
        example: 50
      balance:
        type: number
        format: float
        example: 2032.79
      transactionType:
          type: string
          example: "Electronic"
      category:
            type: string
            example: "Grocery shopping"
      note:
            type: string
            example: "Lorem ipsum"
  AccountID:
    type: object
    properties:
      id:
        type: integer
      date:
        type: string
        format: date-time
      description:
        type: string
        example: "Payment at starbucks"
      amount:
        type: number
        format: int32
        example: 50
      balance:
        type: number
        format: float
        example: 2032.79
  AccountResponse:
    type: object
    properties:
      id:
        type: integer
      date:
        type: string
        format: date-time
      description: 
        type: string
        example: "Payment at starbucks"
      amount:
        type: number
        format: int32
        example: 50
      balance:
        type: number
        format: float
        example: 2032.79
      transactionType:
          type: string
          example: "Electronic"
      category:
            type: string
            example: "Food"  
      note:
            type: string
            example: "Lorem ipsum" 
  Note:
      properties:
        Note:
          type: string
          example: lorem ipsum

            
  
